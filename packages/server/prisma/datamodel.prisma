type Collection {
  id: ID! @unique
  name: String!
  rules: CollectionRuleSet
  products: [Product!]!
}

type CollectionRuleSet {
  id: ID! @unique
  rules: [CollectionRule!]!
  appliesDisjunctively: Boolean!
}

type CollectionRule {
  id: ID! @unique
  field: CollectionRuleField!
  relation: CollectionRuleRelation!
  value: String!
}

enum CollectionRuleField {
  TYPE
  TITLE
  PRICE
}

enum CollectionRuleRelation {
  CONTAINS
  ENDS_WITH
  EQUALS
  GREATER_THAN
  LESS_THAN
  NOT_CONTAINS
  NOT_EQUALS
  STARTS_WITH
}

type ProductType {
  id: ID! @unique
  name: String!
}

type Product {
  id: ID! @unique
  slug: String! @unique
  name: String!
  brand: Brand!
  description: String!
  type: ProductType
  thumbnail: Image!
  variants: [Variant!]!
  collections: [Collection!]!
  attributes: [Attribute!]!
}

type Brand {
  id: ID! @unique
  name: String!
  products: [Product!]!
}

type Attribute {
  id: ID! @unique
  key: String!
  value: String!
  products: [Product!]!
}

type OptionValue {
  id: ID! @unique
  name: String!
  option: Option!
}

type Option {
  id: ID! @unique
  name: String! @unique
  isColor: Boolean!
  values: [OptionValue!]!
}

type Variant {
  id: ID! @unique
  optionValues: [OptionValue!]!
  price: Int!
  availableForSale: Boolean @default(value: false)
  sku: String
  images: [Image!]!
}

type Image {
  id: ID! @unique
  url: String!
}
