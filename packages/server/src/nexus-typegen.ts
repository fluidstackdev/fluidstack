/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "./context"
import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AttributeCreateManyWithoutAttributesInput: { // input type
    connect?: NexusGenInputs['AttributeWhereUniqueInput'][] | null; // [AttributeWhereUniqueInput!]
    create?: NexusGenInputs['AttributeCreateWithoutProductsInput'][] | null; // [AttributeCreateWithoutProductsInput!]
  }
  AttributeCreateWithoutProductsInput: { // input type
    id?: string | null; // ID
    key: string; // String!
    value: string; // String!
  }
  AttributeWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  BrandCreateOneWithoutBrandInput: { // input type
    connect?: NexusGenInputs['BrandWhereUniqueInput'] | null; // BrandWhereUniqueInput
    create?: NexusGenInputs['BrandCreateWithoutProductsInput'] | null; // BrandCreateWithoutProductsInput
  }
  BrandCreateWithoutProductsInput: { // input type
    id?: string | null; // ID
    name: string; // String!
  }
  BrandWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  CollectionCreateManyWithoutCollectionsInput: { // input type
    connect?: NexusGenInputs['CollectionWhereUniqueInput'][] | null; // [CollectionWhereUniqueInput!]
    create?: NexusGenInputs['CollectionCreateWithoutProductsInput'][] | null; // [CollectionCreateWithoutProductsInput!]
  }
  CollectionCreateWithoutProductsInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    rules?: NexusGenInputs['CollectionRuleSetCreateOneWithoutRulesInput'] | null; // CollectionRuleSetCreateOneWithoutRulesInput
  }
  CollectionInput: { // input type
    name: string; // String!
    productsIds?: string[] | null; // [String!]
    ruleSet?: NexusGenInputs['CollectionRuleSetInput'] | null; // CollectionRuleSetInput
  }
  CollectionRuleCreateManyWithoutRulesInput: { // input type
    connect?: NexusGenInputs['CollectionRuleWhereUniqueInput'][] | null; // [CollectionRuleWhereUniqueInput!]
    create?: NexusGenInputs['CollectionRuleCreateWithoutCollectionRuleSetInput'][] | null; // [CollectionRuleCreateWithoutCollectionRuleSetInput!]
  }
  CollectionRuleCreateWithoutCollectionRuleSetInput: { // input type
    field: NexusGenEnums['CollectionRuleField']; // CollectionRuleField!
    id?: string | null; // ID
    relation: NexusGenEnums['CollectionRuleRelation']; // CollectionRuleRelation!
    value: string; // String!
  }
  CollectionRuleSetCreateOneWithoutRulesInput: { // input type
    connect?: NexusGenInputs['CollectionRuleSetWhereUniqueInput'] | null; // CollectionRuleSetWhereUniqueInput
    create?: NexusGenInputs['CollectionRuleSetCreateWithoutCollectionInput'] | null; // CollectionRuleSetCreateWithoutCollectionInput
  }
  CollectionRuleSetCreateWithoutCollectionInput: { // input type
    appliesDisjunctively: boolean; // Boolean!
    id?: string | null; // ID
    rules?: NexusGenInputs['CollectionRuleCreateManyWithoutRulesInput'] | null; // CollectionRuleCreateManyWithoutRulesInput
  }
  CollectionRuleSetInput: { // input type
    applyDisjunctively: boolean; // Boolean!
    rules: NexusGenInputs['RulesInput'][]; // [RulesInput!]!
  }
  CollectionRuleSetWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  CollectionRuleWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  CollectionWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  CreateProductInput: { // input type
    attributesIds: NexusGenInputs['UniqueInput'][]; // [UniqueInput!]!
    brand: NexusGenInputs['UniqueInput']; // UniqueInput!
    name: string; // String!
    slug: string; // String!
    variants: NexusGenInputs['CreateVariantInput'][]; // [CreateVariantInput!]!
  }
  CreateVariantInput: { // input type
    availableForSale: boolean; // Boolean!
    optionsValueIds: NexusGenInputs['UniqueInput'][]; // [UniqueInput!]!
    price: number; // Int!
  }
  ImageCreateManyWithoutImagesInput: { // input type
    connect?: NexusGenInputs['ImageWhereUniqueInput'][] | null; // [ImageWhereUniqueInput!]
    create?: NexusGenInputs['ImageCreateWithoutVariantInput'][] | null; // [ImageCreateWithoutVariantInput!]
  }
  ImageCreateOneWithoutThumbnailInput: { // input type
    connect?: NexusGenInputs['ImageWhereUniqueInput'] | null; // ImageWhereUniqueInput
    create?: NexusGenInputs['ImageCreateWithoutProductInput'] | null; // ImageCreateWithoutProductInput
  }
  ImageCreateWithoutProductInput: { // input type
    id?: string | null; // ID
    url: string; // String!
    variant?: NexusGenInputs['VariantCreateOneWithoutVariantInput'] | null; // VariantCreateOneWithoutVariantInput
  }
  ImageCreateWithoutVariantInput: { // input type
    id?: string | null; // ID
    product?: NexusGenInputs['ProductCreateOneWithoutProductInput'] | null; // ProductCreateOneWithoutProductInput
    url: string; // String!
  }
  ImageWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: number | null; // Int
    notIn?: number[] | null; // [Int!]
  }
  NullableStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  OptionCreateOneWithoutOptionInput: { // input type
    connect?: NexusGenInputs['OptionWhereUniqueInput'] | null; // OptionWhereUniqueInput
    create?: NexusGenInputs['OptionCreateWithoutValuesInput'] | null; // OptionCreateWithoutValuesInput
  }
  OptionCreateWithoutValuesInput: { // input type
    id?: string | null; // ID
    isColor?: boolean | null; // Boolean
    name: string; // String!
  }
  OptionValueCreateManyWithoutOptionValuesInput: { // input type
    connect?: NexusGenInputs['OptionValueWhereUniqueInput'][] | null; // [OptionValueWhereUniqueInput!]
    create?: NexusGenInputs['OptionValueCreateWithoutVariantInput'][] | null; // [OptionValueCreateWithoutVariantInput!]
  }
  OptionValueCreateWithoutVariantInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    option: NexusGenInputs['OptionCreateOneWithoutOptionInput']; // OptionCreateOneWithoutOptionInput!
  }
  OptionValueWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  OptionWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  ProductCreateInput: { // input type
    attributes?: NexusGenInputs['AttributeCreateManyWithoutAttributesInput'] | null; // AttributeCreateManyWithoutAttributesInput
    brand: NexusGenInputs['BrandCreateOneWithoutBrandInput']; // BrandCreateOneWithoutBrandInput!
    collections?: NexusGenInputs['CollectionCreateManyWithoutCollectionsInput'] | null; // CollectionCreateManyWithoutCollectionsInput
    description: string; // String!
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    thumbnail?: NexusGenInputs['ImageCreateOneWithoutThumbnailInput'] | null; // ImageCreateOneWithoutThumbnailInput
    type?: NexusGenInputs['ProductTypeCreateOneWithoutTypeInput'] | null; // ProductTypeCreateOneWithoutTypeInput
    variants?: NexusGenInputs['VariantCreateManyWithoutVariantsInput'] | null; // VariantCreateManyWithoutVariantsInput
  }
  ProductCreateOneWithoutProductInput: { // input type
    connect?: NexusGenInputs['ProductWhereUniqueInput'] | null; // ProductWhereUniqueInput
    create?: NexusGenInputs['ProductCreateWithoutVariantsInput'] | null; // ProductCreateWithoutVariantsInput
  }
  ProductCreateWithoutVariantsInput: { // input type
    attributes?: NexusGenInputs['AttributeCreateManyWithoutAttributesInput'] | null; // AttributeCreateManyWithoutAttributesInput
    brand: NexusGenInputs['BrandCreateOneWithoutBrandInput']; // BrandCreateOneWithoutBrandInput!
    collections?: NexusGenInputs['CollectionCreateManyWithoutCollectionsInput'] | null; // CollectionCreateManyWithoutCollectionsInput
    description: string; // String!
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    thumbnail?: NexusGenInputs['ImageCreateOneWithoutThumbnailInput'] | null; // ImageCreateOneWithoutThumbnailInput
    type?: NexusGenInputs['ProductTypeCreateOneWithoutTypeInput'] | null; // ProductTypeCreateOneWithoutTypeInput
  }
  ProductTypeCreateOneWithoutTypeInput: { // input type
    connect?: NexusGenInputs['ProductTypeWhereUniqueInput'] | null; // ProductTypeWhereUniqueInput
    create?: NexusGenInputs['ProductTypeCreateWithoutProductInput'] | null; // ProductTypeCreateWithoutProductInput
  }
  ProductTypeCreateWithoutProductInput: { // input type
    id?: string | null; // ID
    name: string; // String!
  }
  ProductTypeWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  ProductWhereUniqueInput: { // input type
    id?: string | null; // ID
    slug?: string | null; // String
  }
  QueryFindManyVariantFilter: { // input type
    every?: NexusGenInputs['QueryFindManyVariantWhereInput'] | null; // QueryFindManyVariantWhereInput
    none?: NexusGenInputs['QueryFindManyVariantWhereInput'] | null; // QueryFindManyVariantWhereInput
    some?: NexusGenInputs['QueryFindManyVariantWhereInput'] | null; // QueryFindManyVariantWhereInput
  }
  QueryFindManyVariantWhereInput: { // input type
    AND?: NexusGenInputs['QueryFindManyVariantWhereInput'][] | null; // [QueryFindManyVariantWhereInput!]
    availableForSale?: NexusGenInputs['QueryFindManyVariantFilter'] | null; // QueryFindManyVariantFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    images?: NexusGenInputs['QueryFindManyVariantFilter'] | null; // QueryFindManyVariantFilter
    NOT?: NexusGenInputs['QueryFindManyVariantWhereInput'][] | null; // [QueryFindManyVariantWhereInput!]
    optionValues?: NexusGenInputs['QueryFindManyVariantFilter'] | null; // QueryFindManyVariantFilter
    OR?: NexusGenInputs['QueryFindManyVariantWhereInput'][] | null; // [QueryFindManyVariantWhereInput!]
    price?: NexusGenInputs['IntFilter'] | null; // IntFilter
    product?: NexusGenInputs['QueryFindManyVariantWhereInput'] | null; // QueryFindManyVariantWhereInput
    sku?: NexusGenInputs['NullableStringFilter'] | null; // NullableStringFilter
  }
  RulesInput: { // input type
    field: NexusGenEnums['CollectionRuleField']; // CollectionRuleField!
    relation: NexusGenEnums['CollectionRuleRelation']; // CollectionRuleRelation!
    value: string; // String!
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  UniqueInput: { // input type
    id: string; // ID!
  }
  UpdateProductInput: { // input type
    attributesIds: NexusGenInputs['UniqueInput'][]; // [UniqueInput!]!
    brand: NexusGenInputs['UniqueInput']; // UniqueInput!
    id: string; // ID!
    name: string; // String!
    variants: NexusGenInputs['UpdateVariantInput'][]; // [UpdateVariantInput!]!
  }
  UpdateVariantInput: { // input type
    availableForSale: boolean; // Boolean!
    id: string; // ID!
    optionsValueIds: NexusGenInputs['UniqueInput'][]; // [UniqueInput!]!
    price: number; // Int!
  }
  VariantCreateManyWithoutVariantsInput: { // input type
    connect?: NexusGenInputs['VariantWhereUniqueInput'][] | null; // [VariantWhereUniqueInput!]
    create?: NexusGenInputs['VariantCreateWithoutProductInput'][] | null; // [VariantCreateWithoutProductInput!]
  }
  VariantCreateOneWithoutVariantInput: { // input type
    connect?: NexusGenInputs['VariantWhereUniqueInput'] | null; // VariantWhereUniqueInput
    create?: NexusGenInputs['VariantCreateWithoutImagesInput'] | null; // VariantCreateWithoutImagesInput
  }
  VariantCreateWithoutImagesInput: { // input type
    availableForSale?: boolean | null; // Boolean
    id?: string | null; // ID
    optionValues?: NexusGenInputs['OptionValueCreateManyWithoutOptionValuesInput'] | null; // OptionValueCreateManyWithoutOptionValuesInput
    price: number; // Int!
    product?: NexusGenInputs['ProductCreateOneWithoutProductInput'] | null; // ProductCreateOneWithoutProductInput
    sku?: string | null; // String
  }
  VariantCreateWithoutProductInput: { // input type
    availableForSale?: boolean | null; // Boolean
    id?: string | null; // ID
    images?: NexusGenInputs['ImageCreateManyWithoutImagesInput'] | null; // ImageCreateManyWithoutImagesInput
    optionValues?: NexusGenInputs['OptionValueCreateManyWithoutOptionValuesInput'] | null; // OptionValueCreateManyWithoutOptionValuesInput
    price: number; // Int!
    sku?: string | null; // String
  }
  VariantWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
  CollectionRuleField: photon.CollectionRuleField
  CollectionRuleRelation: photon.CollectionRuleRelation
}

export interface NexusGenRootTypes {
  Attribute: photon.Attribute;
  AttributePayload: { // root type
    name: string; // String!
    values: NexusGenRootTypes['AttributeValue'][]; // [AttributeValue!]!
  }
  AttributeValue: { // root type
    id: string; // ID!
    value: string; // String!
  }
  Brand: photon.Brand;
  Collection: photon.Collection;
  Image: photon.Image;
  Mutation: {};
  Option: photon.Option;
  OptionValue: photon.OptionValue;
  Product: photon.Product;
  Query: {};
  Variant: photon.Variant;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AttributeCreateManyWithoutAttributesInput: NexusGenInputs['AttributeCreateManyWithoutAttributesInput'];
  AttributeCreateWithoutProductsInput: NexusGenInputs['AttributeCreateWithoutProductsInput'];
  AttributeWhereUniqueInput: NexusGenInputs['AttributeWhereUniqueInput'];
  BrandCreateOneWithoutBrandInput: NexusGenInputs['BrandCreateOneWithoutBrandInput'];
  BrandCreateWithoutProductsInput: NexusGenInputs['BrandCreateWithoutProductsInput'];
  BrandWhereUniqueInput: NexusGenInputs['BrandWhereUniqueInput'];
  CollectionCreateManyWithoutCollectionsInput: NexusGenInputs['CollectionCreateManyWithoutCollectionsInput'];
  CollectionCreateWithoutProductsInput: NexusGenInputs['CollectionCreateWithoutProductsInput'];
  CollectionInput: NexusGenInputs['CollectionInput'];
  CollectionRuleCreateManyWithoutRulesInput: NexusGenInputs['CollectionRuleCreateManyWithoutRulesInput'];
  CollectionRuleCreateWithoutCollectionRuleSetInput: NexusGenInputs['CollectionRuleCreateWithoutCollectionRuleSetInput'];
  CollectionRuleSetCreateOneWithoutRulesInput: NexusGenInputs['CollectionRuleSetCreateOneWithoutRulesInput'];
  CollectionRuleSetCreateWithoutCollectionInput: NexusGenInputs['CollectionRuleSetCreateWithoutCollectionInput'];
  CollectionRuleSetInput: NexusGenInputs['CollectionRuleSetInput'];
  CollectionRuleSetWhereUniqueInput: NexusGenInputs['CollectionRuleSetWhereUniqueInput'];
  CollectionRuleWhereUniqueInput: NexusGenInputs['CollectionRuleWhereUniqueInput'];
  CollectionWhereUniqueInput: NexusGenInputs['CollectionWhereUniqueInput'];
  CreateProductInput: NexusGenInputs['CreateProductInput'];
  CreateVariantInput: NexusGenInputs['CreateVariantInput'];
  ImageCreateManyWithoutImagesInput: NexusGenInputs['ImageCreateManyWithoutImagesInput'];
  ImageCreateOneWithoutThumbnailInput: NexusGenInputs['ImageCreateOneWithoutThumbnailInput'];
  ImageCreateWithoutProductInput: NexusGenInputs['ImageCreateWithoutProductInput'];
  ImageCreateWithoutVariantInput: NexusGenInputs['ImageCreateWithoutVariantInput'];
  ImageWhereUniqueInput: NexusGenInputs['ImageWhereUniqueInput'];
  IntFilter: NexusGenInputs['IntFilter'];
  NullableStringFilter: NexusGenInputs['NullableStringFilter'];
  OptionCreateOneWithoutOptionInput: NexusGenInputs['OptionCreateOneWithoutOptionInput'];
  OptionCreateWithoutValuesInput: NexusGenInputs['OptionCreateWithoutValuesInput'];
  OptionValueCreateManyWithoutOptionValuesInput: NexusGenInputs['OptionValueCreateManyWithoutOptionValuesInput'];
  OptionValueCreateWithoutVariantInput: NexusGenInputs['OptionValueCreateWithoutVariantInput'];
  OptionValueWhereUniqueInput: NexusGenInputs['OptionValueWhereUniqueInput'];
  OptionWhereUniqueInput: NexusGenInputs['OptionWhereUniqueInput'];
  ProductCreateInput: NexusGenInputs['ProductCreateInput'];
  ProductCreateOneWithoutProductInput: NexusGenInputs['ProductCreateOneWithoutProductInput'];
  ProductCreateWithoutVariantsInput: NexusGenInputs['ProductCreateWithoutVariantsInput'];
  ProductTypeCreateOneWithoutTypeInput: NexusGenInputs['ProductTypeCreateOneWithoutTypeInput'];
  ProductTypeCreateWithoutProductInput: NexusGenInputs['ProductTypeCreateWithoutProductInput'];
  ProductTypeWhereUniqueInput: NexusGenInputs['ProductTypeWhereUniqueInput'];
  ProductWhereUniqueInput: NexusGenInputs['ProductWhereUniqueInput'];
  QueryFindManyVariantFilter: NexusGenInputs['QueryFindManyVariantFilter'];
  QueryFindManyVariantWhereInput: NexusGenInputs['QueryFindManyVariantWhereInput'];
  RulesInput: NexusGenInputs['RulesInput'];
  StringFilter: NexusGenInputs['StringFilter'];
  UniqueInput: NexusGenInputs['UniqueInput'];
  UpdateProductInput: NexusGenInputs['UpdateProductInput'];
  UpdateVariantInput: NexusGenInputs['UpdateVariantInput'];
  VariantCreateManyWithoutVariantsInput: NexusGenInputs['VariantCreateManyWithoutVariantsInput'];
  VariantCreateOneWithoutVariantInput: NexusGenInputs['VariantCreateOneWithoutVariantInput'];
  VariantCreateWithoutImagesInput: NexusGenInputs['VariantCreateWithoutImagesInput'];
  VariantCreateWithoutProductInput: NexusGenInputs['VariantCreateWithoutProductInput'];
  VariantWhereUniqueInput: NexusGenInputs['VariantWhereUniqueInput'];
  CollectionRuleField: NexusGenEnums['CollectionRuleField'];
  CollectionRuleRelation: NexusGenEnums['CollectionRuleRelation'];
}

export interface NexusGenFieldTypes {
  Attribute: { // field return type
    id: string; // ID!
    key: string; // String!
    products: NexusGenRootTypes['Product'][] | null; // [Product!]
    value: string; // String!
  }
  AttributePayload: { // field return type
    name: string; // String!
    values: NexusGenRootTypes['AttributeValue'][]; // [AttributeValue!]!
  }
  AttributeValue: { // field return type
    id: string; // ID!
    value: string; // String!
  }
  Brand: { // field return type
    id: string; // ID!
    name: string; // String!
    products: NexusGenRootTypes['Product'][] | null; // [Product!]
  }
  Collection: { // field return type
    attributes: NexusGenRootTypes['AttributePayload'][]; // [AttributePayload!]!
    brands: NexusGenRootTypes['Brand'][]; // [Brand!]!
    id: string; // ID!
    name: string; // String!
    options: NexusGenRootTypes['Option'][]; // [Option!]!
    products: NexusGenRootTypes['Product'][]; // [Product!]!
  }
  Image: { // field return type
    id: string; // ID!
    url: string; // String!
  }
  Mutation: { // field return type
    collectionAddProducts: NexusGenRootTypes['Collection']; // Collection!
    collectionCreate: NexusGenRootTypes['Collection']; // Collection!
    collectionRemoveProducts: NexusGenRootTypes['Collection']; // Collection!
    collectionUpdate: NexusGenRootTypes['Collection']; // Collection!
    createOneProduct: NexusGenRootTypes['Product']; // Product!
    productCreate: NexusGenRootTypes['Product']; // Product!
    productDelete: NexusGenRootTypes['Product']; // Product!
    productUpdate: NexusGenRootTypes['Product']; // Product!
  }
  Option: { // field return type
    id: string; // ID!
    isColor: boolean | null; // Boolean
    name: string; // String!
    values: NexusGenRootTypes['OptionValue'][] | null; // [OptionValue!]
  }
  OptionValue: { // field return type
    id: string; // ID!
    name: string; // String!
    option: NexusGenRootTypes['Option']; // Option!
    variant: NexusGenRootTypes['Variant'] | null; // Variant
  }
  Product: { // field return type
    attributes: NexusGenRootTypes['Attribute'][] | null; // [Attribute!]
    brand: NexusGenRootTypes['Brand']; // Brand!
    id: string; // ID!
    name: string; // String!
    slug: string; // String!
    thumbnail: NexusGenRootTypes['Image'] | null; // Image
    variants: NexusGenRootTypes['Variant'][] | null; // [Variant!]
  }
  Query: { // field return type
    brands: NexusGenRootTypes['Brand'][] | null; // [Brand!]
    collection: NexusGenRootTypes['Collection']; // Collection!
    collections: NexusGenRootTypes['Collection'][] | null; // [Collection!]
    findManyVariant: NexusGenRootTypes['Variant'][] | null; // [Variant!]
    findOneVariant: NexusGenRootTypes['Variant'] | null; // Variant
    options: NexusGenRootTypes['Option'][] | null; // [Option!]
    product: NexusGenRootTypes['Product'] | null; // Product
    products: NexusGenRootTypes['Product'][] | null; // [Product!]
  }
  Variant: { // field return type
    availableForSale: boolean | null; // Boolean
    id: string; // ID!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    optionValues: NexusGenRootTypes['OptionValue'][] | null; // [OptionValue!]
    price: number; // Int!
    product: NexusGenRootTypes['Product'] | null; // Product
    sku: string | null; // String
  }
}

export interface NexusGenArgTypes {
  Attribute: {
    products: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Brand: {
    products: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Collection: {
    products: { // args
      attributesIds?: string[] | null; // [ID!]
      brandsIds?: string[] | null; // [ID!]
      first?: number | null; // Int
      last?: number | null; // Int
      optionsValuesIds?: string[] | null; // [ID!]
    }
  }
  Mutation: {
    collectionAddProducts: { // args
      collectionId: string; // ID!
      productIds: string[]; // [ID!]!
    }
    collectionCreate: { // args
      collection: NexusGenInputs['CollectionInput']; // CollectionInput!
    }
    collectionRemoveProducts: { // args
      collectionId: string; // ID!
      productIds: string[]; // [ID!]!
    }
    collectionUpdate: { // args
      collection: NexusGenInputs['CollectionInput']; // CollectionInput!
      id: string; // ID!
    }
    createOneProduct: { // args
      data: NexusGenInputs['ProductCreateInput']; // ProductCreateInput!
    }
    productCreate: { // args
      data: NexusGenInputs['CreateProductInput']; // CreateProductInput!
    }
    productDelete: { // args
      productId: string; // ID!
    }
    productUpdate: { // args
      data: NexusGenInputs['UpdateProductInput']; // UpdateProductInput!
    }
  }
  Option: {
    values: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Product: {
    attributes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    variants: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    brands: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    collection: { // args
      collectionId: string; // ID!
    }
    collections: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    findManyVariant: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
      where?: NexusGenInputs['QueryFindManyVariantWhereInput'] | null; // QueryFindManyVariantWhereInput
    }
    findOneVariant: { // args
      where: NexusGenInputs['VariantWhereUniqueInput']; // VariantWhereUniqueInput!
    }
    options: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    product: { // args
      where: NexusGenInputs['ProductWhereUniqueInput']; // ProductWhereUniqueInput!
    }
    products: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Variant: {
    images: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    optionValues: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Attribute" | "AttributePayload" | "AttributeValue" | "Brand" | "Collection" | "Image" | "Mutation" | "Option" | "OptionValue" | "Product" | "Query" | "Variant";

export type NexusGenInputNames = "AttributeCreateManyWithoutAttributesInput" | "AttributeCreateWithoutProductsInput" | "AttributeWhereUniqueInput" | "BrandCreateOneWithoutBrandInput" | "BrandCreateWithoutProductsInput" | "BrandWhereUniqueInput" | "CollectionCreateManyWithoutCollectionsInput" | "CollectionCreateWithoutProductsInput" | "CollectionInput" | "CollectionRuleCreateManyWithoutRulesInput" | "CollectionRuleCreateWithoutCollectionRuleSetInput" | "CollectionRuleSetCreateOneWithoutRulesInput" | "CollectionRuleSetCreateWithoutCollectionInput" | "CollectionRuleSetInput" | "CollectionRuleSetWhereUniqueInput" | "CollectionRuleWhereUniqueInput" | "CollectionWhereUniqueInput" | "CreateProductInput" | "CreateVariantInput" | "ImageCreateManyWithoutImagesInput" | "ImageCreateOneWithoutThumbnailInput" | "ImageCreateWithoutProductInput" | "ImageCreateWithoutVariantInput" | "ImageWhereUniqueInput" | "IntFilter" | "NullableStringFilter" | "OptionCreateOneWithoutOptionInput" | "OptionCreateWithoutValuesInput" | "OptionValueCreateManyWithoutOptionValuesInput" | "OptionValueCreateWithoutVariantInput" | "OptionValueWhereUniqueInput" | "OptionWhereUniqueInput" | "ProductCreateInput" | "ProductCreateOneWithoutProductInput" | "ProductCreateWithoutVariantsInput" | "ProductTypeCreateOneWithoutTypeInput" | "ProductTypeCreateWithoutProductInput" | "ProductTypeWhereUniqueInput" | "ProductWhereUniqueInput" | "QueryFindManyVariantFilter" | "QueryFindManyVariantWhereInput" | "RulesInput" | "StringFilter" | "UniqueInput" | "UpdateProductInput" | "UpdateVariantInput" | "VariantCreateManyWithoutVariantsInput" | "VariantCreateOneWithoutVariantInput" | "VariantCreateWithoutImagesInput" | "VariantCreateWithoutProductInput" | "VariantWhereUniqueInput";

export type NexusGenEnumNames = "CollectionRuleField" | "CollectionRuleRelation";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}